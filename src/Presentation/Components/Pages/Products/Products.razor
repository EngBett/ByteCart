@page "/products"
@using ByteCart.Application.Products.Models
@inherits DashboardComponentBase

<PageTitle>Products</PageTitle>

<div class="py-6">

    <!-- Header -->
    <HeaderComponent Title="Products" Subtitle="Manage and organize your product inventory" ButtonName="Add New Product" OnActionClick="NavigateToAddProduct" IconifyIcon="solar:clipboard-add-line-duotone" />

    <!-- Alert -->
    <AlertsComponent AlertType="@alertType" AlertMessage="@alertMessage"/>

    <!-- Filter Card -->
    <div class="p-4 mb-6 bg-white border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Filter Products</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div>
                <label class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Search by name or
                    SKU</label>
                <input type="text" @bind="searchTerm" @bind:event="oninput" placeholder="Search products..."
                       class="block w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"/>
            </div>
            <div>
                <label class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Category</label>
                <select @bind="selectedCategoryId"
                        class="block w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                    <option value="">All Categories</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            </div>
            <div>
                <label class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Tag</label>
                <select @bind="selectedTagId"
                        class="block w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                    <option value="">All Tags</option>
                    @foreach (var tag in tags)
                    {
                        <option value="@tag.Id">@tag.Name</option>
                    }
                </select>
            </div>
            <div>
                <label class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Supplier</label>
                <select @bind="selectedSupplierId"
                        class="block w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                    <option value="">All Suppliers</option>
                    @foreach (var supplier in suppliers)
                    {
                        <option value="@supplier.Id">@supplier.Name</option>
                    }
                </select>
            </div>
            <div>
                <label class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Status</label>
                <select @bind="selectedStatusString"
                        class="block w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                    <option value="">All Statuses</option>
                    <option value="Draft">Draft</option>
                    <option value="Active">Active</option>
                    <option value="Discontinued">Discontinued</option>
                </select>
            </div>
            <div>
                <label class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Sort By</label>
                <select @bind="sortBy"
                        class="block w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                    <option value="@ProductSortBy.DateCreated">Date Created</option>
                    <option value="@ProductSortBy.Price">Price</option>
                    <option value="@ProductSortBy.Stock">Stock</option>
                </select>
            </div>
        </div>
        <div class="flex justify-end gap-2 mt-4">
            <button @onclick="ResetFilters"
                    class="cursor-pointer px-4 py-2 text-sm text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-100">
                Reset
            </button>
            
            <button @onclick="ApplyFilters"
                    class="cursor-pointer px-4 py-2 text-sm text-white bg-blue-600 rounded-lg hover:bg-blue-700">Apply
            </button>
        </div>
    </div>

    <!-- Table Actions -->
    <div class="flex justify-end mb-4">
        <button @onclick="ExportProductsToCSV" 
                class="cursor-pointer flex items-center gap-1 px-4 py-2 text-sm text-white bg-green-600 rounded-lg hover:bg-green-700">
            <iconify-icon icon="solar:file-download-line-duotone"></iconify-icon>
            Export Products to CSV
        </button>
    </div>
    
    <!-- Table -->
    @if (loading)
    {
        <div class="flex justify-center py-12">
            <div class="w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full animate-spin"></div>
        </div>
    }
    else if (products == null || !products.Items.Any())
    {
        <div class="p-4 text-blue-800 bg-blue-100 rounded-lg">No products found. Try adjusting your filters or add a new
            product.
        </div>
    }
    else
    {
        <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
            <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                <tr>
                    <th class="px-6 py-3">Image</th>
                    <th class="px-6 py-3">Name</th>
                    <th class="px-6 py-3">SKU</th>
                    <th class="px-6 py-3">Price</th>
                    <th class="px-6 py-3">Stock</th>
                    <th class="px-6 py-3">Status</th>
                    <th class="px-6 py-3">Categories</th>
                    <th class="px-6 py-3">Tags</th>
                    <th class="px-6 py-3 text-right">Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var product in products.Items)
                {
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                        <td class="px-6 py-4">
                            @if (!string.IsNullOrEmpty(product.ThumbnailUrl))
                            {
                                <img src="@product.ThumbnailUrl" alt="@product.Name" class="w-12 h-12 object-cover rounded-md" />
                            }
                            else
                            {
                                <div class="w-12 h-12 bg-gray-200 rounded-md flex items-center justify-center">
                                    <iconify-icon icon="solar:camera-line-duotone" class="text-xl text-gray-400"></iconify-icon>
                                </div>
                            }
                        </td>
                        <td class="px-6 py-4">@product.Name</td>
                        <td class="px-6 py-4">@product.SKU</td>
                        <td class="px-6 py-4">@product.Price.ToString("C")</td>
                        <td class="px-6 py-4">@product.StockQuantity</td>
                        <td class="px-6 py-4">
                            <span class="inline-flex px-2.5 py-0.5 text-xs font-medium rounded-full 
                                    @(product.Status.ToString() == "Active" ? "bg-green-100 text-green-800" : product.Status.ToString() == "Draft" ? "bg-yellow-100 text-yellow-800" : "bg-red-100 text-red-800")">
                                @product.Status
                            </span>
                        </td>
                        <td class="px-6 py-4">@string.Join(", ", product.CategoryNames)</td>
                        <td class="px-6 py-4">@string.Join(", ", product.TagNames)</td>
                        <td class="px-6 py-4 text-right">
                            <div class="flex items-center justify-end gap-2">
                                <button @onclick="() => NavigateToEditProduct(product.Id)"
                                        class="cursor-pointer text-blue-600 hover:text-blue-900">
                                    <iconify-icon icon="solar:pen-new-round-line-duotone"
                                                  class="text-2xl font-bold"></iconify-icon>
                                </button>
                                <button @onclick="() => ShowDeleteConfirmation(product.Id, product.Name)"
                                        class="cursor-pointer text-red-600 hover:text-red-900">
                                    <iconify-icon icon="solar:trash-bin-trash-line-duotone"
                                                  class="text-2xl font-bold"></iconify-icon>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

        </div>

        <!-- Pagination -->
        <PaginationComponent T="ProductDto" Data="products" PageSize="PageSize" OnPageChanged="HandlePageChangeAsync" />
    }

    <!-- Modal -->
    @if (showDeleteConfirmation)
    {
        <div class="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
            <div class="w-full max-w-md p-6 bg-white rounded-lg shadow dark:bg-gray-800">
                <h2 class="text-lg font-semibold text-gray-900 dark:text-white">Delete Product</h2>
                <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">Are you sure you want to
                    delete @productToDeleteName? This action cannot be undone.</p>
                <div class="flex justify-end gap-2 mt-4">
                    <button @onclick="CancelDelete"
                            class="px-4 py-2 text-sm text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-100">
                        Cancel
                    </button>
                    <button @onclick="DeleteProduct"
                            class="px-4 py-2 text-sm text-white bg-red-600 rounded-lg hover:bg-red-700">Delete
                    </button>
                </div>
            </div>
        </div>
    }
</div>